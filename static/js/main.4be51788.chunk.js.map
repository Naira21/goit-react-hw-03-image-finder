{"version":3,"sources":["components/Searchbar.js","services/pixabay.js","components/ImageGalleryItem.js","components/Button.js","components/Loader.js","components/Modal.js","components/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchValue","handleSearchOnChange","e","setState","target","value","handleSearchSubmit","preventDefault","console","log","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayFetch","API_KEY","BASE_URL","_searchQuery","_page","perPage","imageType","imageOrient","a","axios","defaults","baseURL","searchQuery","page","url","get","result","data","hits","message","ImageGalleryItem","pictUrl","photographer","onClick","src","alt","Button","results","length","LoaderComponent","color","height","width","timeout","Modal","handleEscape","code","handleClose","currentTarget","window","addEventListener","removeEventListener","createPortal","largePic","document","getElementById","newPixabayFetch","ImageGallery","searchResults","showModal","status","bigUrlState","handleClick","searchPhotos","then","prev","scrolling","catch","err","scrollTo","top","documentElement","scrollHeight","behavior","closeModal","openModal","bigImg","prevProps","prevState","resetPage","map","picture","webformatURL","user","id","largeImageURL","alert","App","getSearchValue","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4be51788.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"./styles.css\";\n\nclass Searchbar extends Component {\n  state = {\n    searchValue: \"\",\n  };\n\n  handleSearchOnChange = (e) => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  handleSearchSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"before fetch\", this.state.searchValue);\n    this.props.onSubmit(this.state.searchValue); //передает родителю значение\n    this.setState({ searchValue: \"\" }); //зачищаем инпут (+ передаем свойство value в инпут)\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSearchSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={this.state.searchValue}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleSearchOnChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import axios from \"axios\";\n\n// const BASE_URL = `https://pixabay.com/api/`;\n// const API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\n\n// axios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common.key = API_KEY;\n// let searchQ = 'bear';\n// let searchP = '1';\n// let searchPP = '12';\n\n// let params = `?q=${searchQ}&page=${searchP}&per_page=${searchPP}`\n// let url = params;\n// axios.get(url);\n\n//OOP\nexport class PixabayFetch {\n  constructor(API_KEY, BASE_URL) {\n    this.BASE_URL = BASE_URL;\n    this.API_KEY = API_KEY;\n    this._searchQuery = \"\"; //имя свойства, с которым работает геттер и сеттер (их имена одинаковые), должно отличаться. Для этого используем паттерн — нижнее подчеркивание\n    this._page = 1;\n    this.perPage = 12;\n    this.imageType = \"photo\";\n    this.imageOrient = \"horizontal\";\n  }\n  //так как мы передаем пустое значение для searchQuery, то необходимо ввести для них геттер ии сеттер\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async searchPhotos() {\n    axios.defaults.baseURL = this.BASE_URL;\n    console.log(\"searchQ:\", this.searchQuery, \"page:\", this.page);\n    let url = `?q=${this.searchQuery}&page=${this.page}&key=${this.API_KEY}&image_type=${this.imageType}&orientation=${this.imageOrient}&per_page=${this.perPage}`;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (err) {\n      return err.message;\n    }\n    // return\n    //     .then(result=> { return result.data })\n    //     .then(data => { return data.hits })\n    //     .catch((err) => { console.log(err) });\n  }\n}\n\n//Declarative method\n// export function PixabayFetchFunc(){\n// const BASE_URL = `https://pixabay.com/api/`;\n// const API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\n\n//     axios.defaults.baseURL = BASE_URL;\n//     const searchPhotos=(searchQuery, searchPage, imageType, imageOrient, searchPerPage)=> {\n//         axios.defaults.baseURL = this.BASE_URL;\n//         let url = `?q=${searchQuery}&page=${searchPage}&key=${API_KEY}&image_type=${imageType}&orientation=${imageOrient}&per_page=${searchPerPage}`;\n//         axios.get(url).then((result)=>{console.log(result)}).catch((err)=>{console.log(err)});\n//     }\n// }\n","import \"./styles.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ pictUrl, photographer, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={pictUrl}\n        alt={photographer}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  pictUrl: PropTypes.string,\n  photographer: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import \"./styles.css\";\n\nexport default function Button({ onClick, results }) {\n  return (\n    results.length > 0 && (\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    )\n  );\n}\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class LoaderComponent extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./styles.css\";\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleEscape);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleEscape);\n  }\n\n  handleEscape = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClick();\n    }\n  };\n\n  handleClose = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleClose}>\n        <div className=\"Modal\">\n          <img src={this.props.largePic} alt=\"\" />\n        </div>\n      </div>,\n      document.getElementById(\"modalRoot\")\n    );\n  }\n}\n","import \"./styles.css\";\nimport { Component } from \"react\";\nimport { PixabayFetch } from \"../services/pixabay\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport Button from \"./Button\";\nimport LoaderComponent from \"./Loader\";\nimport { Modal } from \"./Modal\";\n\n//для запроса\nconst API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\nconst BASE_URL = `https://pixabay.com/api/`;\nconst newPixabayFetch = new PixabayFetch(API_KEY, BASE_URL);\n\nexport class ImageGallery extends Component {\n  state = {\n    searchResults: [],\n    showModal: false,\n    status: \"init\",\n    bigUrlState: \"\",\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchValue !== this.props.searchValue) {\n      console.log(`get fetch`);\n      this.setState({ status: \"pending\" });\n      newPixabayFetch.resetPage();\n      newPixabayFetch.searchQuery = this.props.searchValue; //так как мы обращаемся к сеттеру, то значение мы просто перезаписываем (а не вызываем)\n      newPixabayFetch\n        .searchPhotos() //сетим значение из searchValue, чтобы вызвать метод searchPhotos\n        .then((searchResults) => {\n          console.log(searchResults);\n          this.setState({ searchResults, status: \"success\" });\n          this.scrolling();\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ status: \"error\" });\n        });\n    }\n  }\n\n  handleClick = () => {\n    newPixabayFetch.page = 1;\n    console.log(\"page\", newPixabayFetch.page);\n    newPixabayFetch\n      .searchPhotos()\n      .then((searchResults) => {\n        this.setState((prev) => ({\n          searchResults: [...prev.searchResults, ...searchResults],\n          status: \"success\",\n        }));\n        this.scrolling();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ status: \"error\" });\n      });\n  };\n\n  scrolling = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false, bigUrlState: \"\" });\n  };\n\n  openModal = (bigImg) => {\n    this.setState({\n      showModal: true,\n      bigUrlState: bigImg,\n    });\n  };\n\n  render() {\n    const { searchResults, status, showModal } = this.state;\n    const { closeModal, handleClick, openModal } = this;\n    if (status === \"init\") {\n      return null;\n    }\n    if (status === \"pending\") {\n      return <LoaderComponent />;\n    }\n    if (status === \"success\") {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {searchResults.length > 0 &&\n              searchResults.map((picture) => {\n                return (\n                  <ImageGalleryItem\n                    key={picture.id}\n                    onClick={openModal}\n                    pictUrl={picture.webformatURL}\n                    photographer={picture.user}\n                  />\n                );\n              })}\n            {showModal && (\n              <Modal\n                onClick={closeModal}\n                largePic={searchResults.largeImageURL}\n              />\n            )}\n          </ul>\n\n          <Button type=\"button\" onClick={handleClick} results={searchResults} />\n\n          {/* {this.showModal && (<Modal onClick={this.toggleModal} largePicture={this.state.searchResults.largeImageURL }  userName={this.state.searchResults.user }/>)} */}\n        </>\n      );\n    }\n    if (status === \"error\") {\n      if (searchResults.length === 0) {\n        return alert(\"Sorry, we have not find such word... Lets try again!\");\n      }\n    }\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\n\n//импорт компонентов\nimport Searchbar from \"./components/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery\";\n\nclass App extends Component {\n  state = {\n    searchValue: \"\",\n    page: 1,\n  };\n\n  getSearchValue = (searchValue) => this.setState({ searchValue });\n\n  render() {\n    const { getSearchValue } = this;\n    const { searchValue, page } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={getSearchValue} />\n        <ImageGallery searchValue={searchValue} page={page} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}