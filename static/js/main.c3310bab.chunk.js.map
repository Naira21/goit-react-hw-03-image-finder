{"version":3,"sources":["components/Searchbar.js","services/pixabay.js","components/ImageGalleryItem.js","components/Button.js","components/Loader.js","components/ImageGallery.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","state","searchValue","handleSearchOnChange","e","setState","target","value","handleSearchSubmit","preventDefault","console","log","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayFetch","API_KEY","BASE_URL","_searchQuery","_page","perPage","imageType","imageOrient","a","axios","defaults","baseURL","searchQuery","page","url","get","result","data","hits","message","ImageGalleryItem","picture","src","webformatURL","alt","user","Button","onClick","results","length","LoaderComponent","color","height","width","timeout","newPixabayFetch","ImageGallery","searchResults","status","handleClick","searchPhotos","then","prev","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","err","prevProps","prevState","resetPage","map","id","alert","Modal","createPortal","getElementById","App","getSearchValue","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3310bab.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"./styles.css\";\n\nclass Searchbar extends Component {\n  state = {\n    searchValue: \"\",\n  };\n\n  handleSearchOnChange = (e) => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  handleSearchSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"before fetch\", this.state.searchValue);\n    this.props.onSubmit(this.state.searchValue); //передает родителю значение\n    this.setState({ searchValue: \"\" }); //зачищаем инпут (+ передаем свойство value в инпут)\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSearchSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={this.state.searchValue}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleSearchOnChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import axios from \"axios\";\n\n// const BASE_URL = `https://pixabay.com/api/`;\n// const API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\n\n// axios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common.key = API_KEY;\n// let searchQ = 'bear';\n// let searchP = '1';\n// let searchPP = '12';\n\n// let params = `?q=${searchQ}&page=${searchP}&per_page=${searchPP}`\n// let url = params;\n// axios.get(url);\n\n//OOP\nexport class PixabayFetch {\n  constructor(API_KEY, BASE_URL) {\n    this.BASE_URL = BASE_URL;\n    this.API_KEY = API_KEY;\n    this._searchQuery = \"\"; //имя свойства, с которым работает геттер и сеттер (их имена одинаковые), должно отличаться. Для этого используем паттерн — нижнее подчеркивание\n    this._page = 1;\n    this.perPage = 12;\n    this.imageType = \"photo\";\n    this.imageOrient = \"horizontal\";\n  }\n  //так как мы передаем пустое значение для searchQuery, то необходимо ввести для них геттер ии сеттер\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async searchPhotos() {\n    axios.defaults.baseURL = this.BASE_URL;\n    console.log(\"searchQ:\", this.searchQuery, \"page:\", this.page);\n    let url = `?q=${this.searchQuery}&page=${this.page}&key=${this.API_KEY}&image_type=${this.imageType}&orientation=${this.imageOrient}&per_page=${this.perPage}`;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (err) {\n      return err.message;\n    }\n    // return\n    //     .then(result=> { return result.data })\n    //     .then(data => { return data.hits })\n    //     .catch((err) => { console.log(err) });\n  }\n}\n\n//Declarative method\n// export function PixabayFetchFunc(){\n// const BASE_URL = `https://pixabay.com/api/`;\n// const API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\n\n//     axios.defaults.baseURL = BASE_URL;\n//     const searchPhotos=(searchQuery, searchPage, imageType, imageOrient, searchPerPage)=> {\n//         axios.defaults.baseURL = this.BASE_URL;\n//         let url = `?q=${searchQuery}&page=${searchPage}&key=${API_KEY}&image_type=${imageType}&orientation=${imageOrient}&per_page=${searchPerPage}`;\n//         axios.get(url).then((result)=>{console.log(result)}).catch((err)=>{console.log(err)});\n//     }\n// }\n","import \"./styles.css\";\n\nconst ImageGalleryItem = ({ picture }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={picture.webformatURL}\n        alt={picture.user}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\nexport default ImageGalleryItem;\n","import \"./styles.css\";\n\nexport default function Button({ onClick, results }) {\n  return (\n    results.length > 0 && (\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    )\n  );\n}\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class LoaderComponent extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Bars\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n}\n","import \"./styles.css\";\nimport { Component } from \"react\";\nimport { PixabayFetch } from \"../services/pixabay\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport Button from \"./Button\";\nimport LoaderComponent from \"./Loader\";\n\n//для запроса\nconst API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\nconst BASE_URL = `https://pixabay.com/api/`;\nconst newPixabayFetch = new PixabayFetch(API_KEY, BASE_URL);\n\nexport class ImageGallery extends Component {\n  state = {\n    searchResults: [],\n    status: \"init\",\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchValue !== this.props.searchValue) {\n      console.log(`get fetch`);\n      this.setState({ status: \"pending\" });\n      newPixabayFetch.resetPage();\n      newPixabayFetch.searchQuery = this.props.searchValue; //так как мы обращаемся к сеттеру, то значение мы просто перезаписываем (а не вызываем)\n      newPixabayFetch\n        .searchPhotos() //сетим значение из searchValue, чтобы вызвать метод searchPhotos\n        .then((searchResults) => {\n          console.log(searchResults);\n          this.setState({ searchResults, status: \"success\" });\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ status: \"error\" });\n        });\n    }\n  }\n  handleClick = () => {\n    newPixabayFetch.page = 1;\n    console.log(\"page\", newPixabayFetch.page);\n    newPixabayFetch\n      .searchPhotos()\n      .then((searchResults) => {\n        this.setState((prev) => ({\n          searchResults: [...prev.searchResults, ...searchResults],\n          status: \"success\",\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ status: \"error\" });\n      });\n  };\n\n  render() {\n    if (this.state.status === \"init\") {\n      return null;\n    }\n    if (this.state.status === \"pending\") {\n      return <LoaderComponent />;\n    }\n    if (this.state.status === \"success\") {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {this.state.searchResults.map((picture) => {\n              return <ImageGalleryItem picture={picture} key={picture.id} />;\n            })}\n            {/* {this.state.searchResults.total.length > 0 &&\n              this.state.searchResults.map((picture) => {\n                return <ImageGalleryItem picture={picture} key={picture.id} />;\n              })} */}\n          </ul>\n          {/* <button type=\"button\" onClick={this.handleClick}>\n              load more\n            </button> */}\n          {/* <Button type=\"button\" results={this.state.searchResults} onClick={this.handleClick} /> */}\n          <Button\n            type=\"button\"\n            onClick={this.handleClick}\n            results={this.state.searchResults}\n          />\n        </>\n      );\n    }\n    if (this.state.status === \"error\") {\n      return alert(\"Sorry, we have not find such word... Lets try again!\");\n    }\n  }\n}\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./styles.css\";\n\nexport class Modal extends Component {\n  render() {\n    return createPortal(\n      <div className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src=\"\" alt=\"\" />\n        </div>\n      </div>,\n      document.getElementById(\"modalRoot\")\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\n// const BASE_URL = `https://pixabay.com/api/`;\n\n//импорт компонентов\nimport Searchbar from \"./components/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery\";\nimport { Modal } from \"./components/Modal\";\n\n// let searchQuery = 'bear';\n// let searchPage = '1';\n// let searchPerPage = '12';\n// const imageType = 'photo';\n// const imageOrient = 'horizontal';\n// let url = `?q=${searchQuery}&page=${searchPage}&key=${API_KEY}&image_type=${imageType}&orientation=${imageOrient}&per_page=${searchPerPage}`\n\n//класс\n\nclass App extends Component {\n  state = {\n    searchValue: \"\",\n    // page: 1,\n    //searchResults:[],\n  };\n\n  //методы жизненного цикла\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevState.searchValue !== this.state.searchValue) {  //проверяем условие\n    //  console.log(`dd`)\n    // }\n  }\n  getSearchValue = (searchValue) => this.setState({ searchValue });\n  render() {\n    //const { handleSearchSubmit, handleSearchOnChange } = this;\n    const { searchValue, page } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.getSearchValue} />\n        <Modal>\n          <ImageGallery searchValue={searchValue} page={page} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}